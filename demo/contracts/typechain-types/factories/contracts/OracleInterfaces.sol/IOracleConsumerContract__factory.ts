/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOracleConsumerContract,
  IOracleConsumerContractInterface,
} from "../../../contracts/OracleInterfaces.sol/IOracleConsumerContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "price",
            type: "int256",
          },
          {
            internalType: "enum FeedType",
            name: "feedType",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "forwardArguments",
            type: "bytes",
          },
        ],
        internalType: "struct ForwardData",
        name: "forwardData",
        type: "tuple",
      },
    ],
    name: "consume",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOracleConsumerContract__factory {
  static readonly abi = _abi;
  static createInterface(): IOracleConsumerContractInterface {
    return new Interface(_abi) as IOracleConsumerContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOracleConsumerContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IOracleConsumerContract;
  }
}
