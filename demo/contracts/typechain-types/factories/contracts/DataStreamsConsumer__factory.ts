/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DataStreamsConsumer,
  DataStreamsConsumerInterface,
} from "../../contracts/DataStreamsConsumer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensAmount",
        type: "uint256",
      },
    ],
    name: "TradeExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "price",
            type: "int256",
          },
          {
            internalType: "enum FeedType",
            name: "feedType",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "forwardArguments",
            type: "bytes",
          },
        ],
        internalType: "struct ForwardData",
        name: "forwardData",
        type: "tuple",
      },
    ],
    name: "consume",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "i_oracleEmitter",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_router",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleEmitter",
        type: "address",
      },
    ],
    name: "initializer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "feedId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "trade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506115e3806100206000396000f3fe6080604052600436106100595760003560e01c80633196b7c614610065578063581bdd16146100a25780635e1b4f6e146100cd5780639d524f68146100f8578063b0a6217b14610121578063c57981b51461014a57610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c600480360381019061008791906109f6565b610175565b6040516100999190610a5a565b60405180910390f35b3480156100ae57600080fd5b506100b76101e6565b6040516100c49190610af4565b60405180910390f35b3480156100d957600080fd5b506100e261020a565b6040516100ef9190610b30565b60405180910390f35b34801561010457600080fd5b5061011f600480360381019061011a9190610c60565b610230565b005b34801561012d57600080fd5b5061014860048036038101906101439190610cf7565b610303565b005b34801561015657600080fd5b5061015f610388565b60405161016c9190610d55565b60405180910390f35b60008082604001518060200190518101906101909190610edc565b905060006101a284600001518361038e565b90507f80ef05806f38eb8789ddab5e34cd350f1ff47d351308a6de7f10fedd2770afec816040516101d39190610f34565b60405180910390a1600192505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d37191de303388888888604051602001610288959493929190610fb3565b60405160208183030381529060405284336040518563ffffffff1660e01b81526004016102b89493929190611062565b6020604051808303816000875af11580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb91906110da565b505050505050565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610bb881565b600080826020015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104049190611140565b905060006104168460400151866106c6565b9050600082600a61042791906112cf565b856060015183610437919061131a565b610441919061138b565b9050846020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd86600001513088606001516040518463ffffffff1660e01b815260040161048c939291906113bc565b6020604051808303816000875af11580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf91906110da565b50846020015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687606001516040518363ffffffff1660e01b81526004016105339291906113f3565b6020604051808303816000875af1158015610552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906110da565b5060006040518060e00160405280876020015173ffffffffffffffffffffffffffffffffffffffff168152602001876040015173ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff168152602001876000015173ffffffffffffffffffffffffffffffffffffffff16815260200187606001518152602001838152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304e45aaf826040518263ffffffff1660e01b815260040161067791906114e6565b6020604051808303816000875af1158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190611501565b94505050505092915050565b6000806012905060008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561071a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073e9190611140565b9050818160ff1610156107805760008160ff168361075c919061152e565b905080600a61076b9190611562565b85610776919061138b565b93505050506107b1565b6000828260ff16610791919061152e565b905080600a6107a09190611562565b856107ab919061131a565b93505050505b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610819826107d0565b810181811067ffffffffffffffff82111715610838576108376107e1565b5b80604052505050565b600061084b6107b7565b90506108578282610810565b919050565b600080fd5b6000819050919050565b61087481610861565b811461087f57600080fd5b50565b6000813590506108918161086b565b92915050565b600281106108a457600080fd5b50565b6000813590506108b681610897565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156108e1576108e06107e1565b5b6108ea826107d0565b9050602081019050919050565b82818337600083830152505050565b6000610919610914846108c6565b610841565b905082815260208101848484011115610935576109346108c1565b5b6109408482856108f7565b509392505050565b600082601f83011261095d5761095c6108bc565b5b813561096d848260208601610906565b91505092915050565b60006060828403121561098c5761098b6107cb565b5b6109966060610841565b905060006109a684828501610882565b60008301525060206109ba848285016108a7565b602083015250604082013567ffffffffffffffff8111156109de576109dd61085c565b5b6109ea84828501610948565b60408301525092915050565b600060208284031215610a0c57610a0b6107c1565b5b600082013567ffffffffffffffff811115610a2a57610a296107c6565b5b610a3684828501610976565b91505092915050565b60008115159050919050565b610a5481610a3f565b82525050565b6000602082019050610a6f6000830184610a4b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610aba610ab5610ab084610a75565b610a95565b610a75565b9050919050565b6000610acc82610a9f565b9050919050565b6000610ade82610ac1565b9050919050565b610aee81610ad3565b82525050565b6000602082019050610b096000830184610ae5565b92915050565b6000610b1a82610ac1565b9050919050565b610b2a81610b0f565b82525050565b6000602082019050610b456000830184610b21565b92915050565b6000610b5682610a75565b9050919050565b610b6681610b4b565b8114610b7157600080fd5b50565b600081359050610b8381610b5d565b92915050565b6000819050919050565b610b9c81610b89565b8114610ba757600080fd5b50565b600081359050610bb981610b93565b92915050565b600067ffffffffffffffff821115610bda57610bd96107e1565b5b610be3826107d0565b9050602081019050919050565b6000610c03610bfe84610bbf565b610841565b905082815260208101848484011115610c1f57610c1e6108c1565b5b610c2a8482856108f7565b509392505050565b600082601f830112610c4757610c466108bc565b5b8135610c57848260208601610bf0565b91505092915050565b600080600080600060a08688031215610c7c57610c7b6107c1565b5b6000610c8a88828901610b74565b9550506020610c9b88828901610b74565b9450506040610cac88828901610baa565b935050606086013567ffffffffffffffff811115610ccd57610ccc6107c6565b5b610cd988828901610c32565b9250506080610cea88828901610baa565b9150509295509295909350565b60008060408385031215610d0e57610d0d6107c1565b5b6000610d1c85828601610b74565b9250506020610d2d85828601610b74565b9150509250929050565b600062ffffff82169050919050565b610d4f81610d37565b82525050565b6000602082019050610d6a6000830184610d46565b92915050565b600081519050610d7f81610b5d565b92915050565b600081519050610d9481610b93565b92915050565b60005b83811015610db8578082015181840152602081019050610d9d565b60008484015250505050565b6000610dd7610dd284610bbf565b610841565b905082815260208101848484011115610df357610df26108c1565b5b610dfe848285610d9a565b509392505050565b600082601f830112610e1b57610e1a6108bc565b5b8151610e2b848260208601610dc4565b91505092915050565b600060a08284031215610e4a57610e496107cb565b5b610e5460a0610841565b90506000610e6484828501610d70565b6000830152506020610e7884828501610d70565b6020830152506040610e8c84828501610d70565b6040830152506060610ea084828501610d85565b606083015250608082015167ffffffffffffffff811115610ec457610ec361085c565b5b610ed084828501610e06565b60808301525092915050565b600060208284031215610ef257610ef16107c1565b5b600082015167ffffffffffffffff811115610f1057610f0f6107c6565b5b610f1c84828501610e34565b91505092915050565b610f2e81610b89565b82525050565b6000602082019050610f496000830184610f25565b92915050565b610f5881610b4b565b82525050565b600081519050919050565b600082825260208201905092915050565b6000610f8582610f5e565b610f8f8185610f69565b9350610f9f818560208601610d9a565b610fa8816107d0565b840191505092915050565b600060a082019050610fc86000830188610f4f565b610fd56020830187610f4f565b610fe26040830186610f4f565b610fef6060830185610f25565b81810360808301526110018184610f7a565b90509695505050505050565b600081519050919050565b600082825260208201905092915050565b60006110348261100d565b61103e8185611018565b935061104e818560208601610d9a565b611057816107d0565b840191505092915050565b60006080820190506110776000830187610f4f565b81810360208301526110898186611029565b90506110986040830185610f25565b6110a56060830184610f4f565b95945050505050565b6110b781610a3f565b81146110c257600080fd5b50565b6000815190506110d4816110ae565b92915050565b6000602082840312156110f0576110ef6107c1565b5b60006110fe848285016110c5565b91505092915050565b600060ff82169050919050565b61111d81611107565b811461112857600080fd5b50565b60008151905061113a81611114565b92915050565b600060208284031215611156576111556107c1565b5b60006111648482850161112b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156111f3578086048111156111cf576111ce61116d565b5b60018516156111de5780820291505b80810290506111ec8561119c565b94506111b3565b94509492505050565b60008261120c57600190506112c8565b8161121a57600090506112c8565b8160018114611230576002811461123a57611269565b60019150506112c8565b60ff84111561124c5761124b61116d565b5b8360020a9150848211156112635761126261116d565b5b506112c8565b5060208310610133831016604e8410600b841016171561129e5782820a9050838111156112995761129861116d565b5b6112c8565b6112ab84848460016111a9565b925090508184048111156112c2576112c161116d565b5b81810290505b9392505050565b60006112da82610b89565b91506112e583611107565b92506113127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111fc565b905092915050565b600061132582610b89565b915061133083610b89565b925082820261133e81610b89565b915082820484148315176113555761135461116d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061139682610b89565b91506113a183610b89565b9250826113b1576113b061135c565b5b828204905092915050565b60006060820190506113d16000830186610f4f565b6113de6020830185610f4f565b6113eb6040830184610f25565b949350505050565b60006040820190506114086000830185610f4f565b6114156020830184610f25565b9392505050565b61142581610b4b565b82525050565b61143481610d37565b82525050565b61144381610b89565b82525050565b61145281610a75565b82525050565b60e08201600082015161146e600085018261141c565b506020820151611481602085018261141c565b506040820151611494604085018261142b565b5060608201516114a7606085018261141c565b5060808201516114ba608085018261143a565b5060a08201516114cd60a085018261143a565b5060c08201516114e060c0850182611449565b50505050565b600060e0820190506114fb6000830184611458565b92915050565b600060208284031215611517576115166107c1565b5b600061152584828501610d85565b91505092915050565b600061153982610b89565b915061154483610b89565b925082820390508181111561155c5761155b61116d565b5b92915050565b600061156d82610b89565b915061157883610b89565b92506115a57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111fc565b90509291505056fea26469706673582212200fb6481baba2892bb77c1186de06c20fb549b369cb156c58e384feea3a9ffde864736f6c63430008130033";

type DataStreamsConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataStreamsConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataStreamsConsumer__factory extends ContractFactory {
  constructor(...args: DataStreamsConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataStreamsConsumer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataStreamsConsumer__factory {
    return super.connect(runner) as DataStreamsConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataStreamsConsumerInterface {
    return new Interface(_abi) as DataStreamsConsumerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataStreamsConsumer {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataStreamsConsumer;
  }
}
